import { Button, List, ListItem } from "@mui/material";
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useUsers } from "../src/hooks/users";
import { queryClient } from "../src/services/queryClient";

import styles from "../styles/Home.module.css";
import { GET_USERS } from "./constants/keys";
import { useDispatch, useSelector } from "react-redux";
import { setAuthorized } from "../src/features/user/userSlice";
import DeleteUserModal from "../src/components/DeleteUserModal";

const Home: NextPage = () => {
  const router = useRouter();
  const dispatch = useDispatch();
  const [modalOpen, setModalOpen] = useState(false);
  const [user, setUser] = useState({});

  const isAuthorized = useSelector((state: any) => state.user.authorized);

  const goToUserCreatePage = async () => {
    router.push("/users/create");
  };

  const handleLogout = () => {
    localStorage.removeItem("jwtToken");
    dispatch(setAuthorized(false));
  };

  const handleOpenModal = (user: any) => {
    setUser(user);
    setModalOpen(true);
  };

  const { userData } = useUsers();

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <main> */}

      <List>
        {userData.map((item: any, index: number) => (
          <ListItem
            key={`${item.username}-${index}`}
            style={{
              display: "flex",
              justifyContent: "space-between",
            }}
          >
            {`${item.firstName} ${item.lastName}`}
            <div style={{ display: "flex", columnGap: "10px" }}>
              <Button
                variant="contained"
                color="primary"
                onClick={() => router.push(`/books/user/${item.id}`)}
              >
                View Books
              </Button>
              <Button
                variant="contained"
                color="error"
                onClick={() => handleOpenModal(item)}
              >
                Delete User
              </Button>
            </div>
          </ListItem>
        ))}
      </List>
      <DeleteUserModal open={modalOpen} setOpen={setModalOpen} user={user} />
      {/* </main> */}

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;
